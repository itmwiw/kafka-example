apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: my-cluster-nodepool
  labels:
    strimzi.io/cluster: my-cluster
spec:
  replicas: 3
  roles:
    - controller
    - broker
  resources:
    requests:
      memory: 2Gi
      cpu: "2"
    limits:
      memory: 6Gi
      cpu: "2"
  jvmOptions:
    -Xms: 4096m
    -Xmx: 4096m
  storage:
    type: jbod
    volumes:
    - id: 0
      type: persistent-claim
      size: 10Gi
      deleteClaim: false
      kraftMetadata: shared
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    version: "3.8.0"
    metadataVersion: "3.8"
    listeners:
      - name: oauth
        port: 9092
        type: internal
        tls: false
        authentication:
          type: oauth
          validIssuerUri: http://keycloak.apps.okd.advatys.com/realms/kafka-authz
          jwksEndpointUri: http://keycloak.apps.okd.advatys.com/realms/kafka-authz/protocol/openid-connect/certs
          userNameClaim: preferred_username
          checkAccessTokenType: false
          customClaimCheck: "@.typ && @.typ == 'Bearer'"
          maxSecondsWithoutReauthentication: 3600
    authorization:
      type: simple
      superUsers:
      - service-account-kafka
    config:
      auto.create.topics.enable: "false"
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
    logging:
      type: inline
      loggers:
        log4j.logger.io.strimzi: "TRACE"
        log4j.logger.kafka: "DEBUG"
        log4j.logger.org.apache.kafka: "DEBUG"
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
  entityOperator:
    topicOperator: {}
    userOperator: {}

