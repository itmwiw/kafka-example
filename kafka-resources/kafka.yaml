apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: my-kafka-nodepool
  labels:
    strimzi.io/cluster: my-kafka-cluster
spec:
  replicas: 3
  roles:
    - controller
    - broker
  resources:
    requests:
      memory: 6Gi
      cpu: "2"
    limits:
      memory: 6Gi
      cpu: "2"
  jvmOptions:
    -Xms: 4096m
    -Xmx: 4096m
  storage:
    type: jbod
    volumes:
    - id: 0
      type: persistent-claim
      size: 10Gi
      deleteClaim: false
      kraftMetadata: shared
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-kafka-cluster
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    version: "3.8.0"
    metadataVersion: "3.8"
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
      - name: external
        port: 9094
        type: route
        tls: true
      - name: keycloak
        port: 9095
        type: internal
        tls: false
        authentication:
          type: oauth
          # clientId: kafka-broker
          # clientSecret:
            # key: secret
            # secretName: broker-oauth-secret
          validIssuerUri: http://keycloak-bitnami:80/auth/realms/kafka-authz
          jwksEndpointUri: http://keycloak-bitnami:80/auth/realms/kafka-authz/protocol/openid-connect/certs
          userNameClaim: preferred_username
          checkAccessTokenType: false
          customClaimCheck: "@.typ && @.typ == 'Bearer'"

          # the next option is only available since Strimzi 0.20.0
          # remove it if using an older version of Strimzi
          maxSecondsWithoutReauthentication: 3600
          # tlsTrustedCertificates:
          # - secretName: ca-truststore
            # certificate: ca.crt
    authorization:
      type: keycloak
      clientId: kafka
      tokenEndpointUri: http://keycloak-bitnami:80/auth/realms/kafka-authz/protocol/openid-connect/token
      delegateToKafkaAcls: true
      superUsers:
      - service-account-kafka
    config:
      auto.create.topics.enable: "false"
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
    logging:
      type: inline
      loggers:
        kafka.root.logger.level: INFO
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
  entityOperator:
    topicOperator: {}
    userOperator: {}

